generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String        @id @default(uuid())
  email                String        @unique
  password             String
  role                 Role          @default(User)
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  profilePictureUrl    String?
  username             String
  resetPasswordExpires DateTime?
  resetToken           String?       @unique
  availability         Json?
  bio                  String?
  contactNumber        String?
  designation          String?
  Appointment          Appointment[]
  
  cards                Card[]
}

model Card {
  id                     String            @id @default(uuid())
  title                  String
  jobTitle               String?
  companyName            String?
  location               String?
  profileImageUrl        String?
  headerImageUrl         String?
  templateType           String
  cardName               String            @unique //baseurl + title + 
  qrCodeUrl              String?
  createdAt              DateTime          @default(now())
  updatedAt              DateTime          @updatedAt
  userId                 String
  aboutUs                String?
  comanyAddress          String?
  dateOfBirth            String?
  emails                 String[]
  phoneNumbers           String[]
  youtubeVideoLink       String[]
  additionalLink         String?
  bio                    String?
  gridType               String?  // it is for track wheather user want products or services
  emergencyEmail         String?
  emergencyName          String?
  emergencyNumber        String?
  emergencyRelationship  String?
  linkedinLink           String?
  twitterLink            String?
  instagramLink          String?
  languageSpoken         String?
  otherEmails            String?
  otherPhoneNumber       String?
  phoneNumber            String?
  productDesc            String?
  facebookLink           String?
  gallery                String[]
  instagramPost          String[]
  instagramReel          String[]
  user                   User              @relation(fields: [userId], references: [id],onDelete: Cascade)
  services               Service[]
  SocialMediaLink        SocialMediaLink[]
  testimonials           Testimonial[]
  businessHours          business[]
  companySocialMediaLink  companySocialMediaLink[]
}
model business {
  id          Int      @id @default(autoincrement())
  type           String?
  from      String?
  to        String?
  cardId      String
  card        Card     @relation(fields: [cardId], references: [id], onDelete: Cascade)
}
model Testimonial {
  id          Int      @id @default(autoincrement())
  name        String
  imageUrl    String?
  description String
  desgination String
  createdAt   DateTime @default(now())
  cardId      String
  card        Card     @relation(fields: [cardId], references: [id], onDelete: Cascade)
}

model Appointment {
  id          Int      @id @default(autoincrement())
  name        String
  phoneNumber String
  email       String
  message     String
  timing      DateTime @default(now())
  createdAt   DateTime @default(now())
  userId      String
  cardId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Service {
  id         Int     @id @default(autoincrement())
  name       String
  imageUrl   String?
  serviceUrl String?
  description String?
  cardId     String
  card       Card    @relation(fields: [cardId], references: [id], onDelete: Cascade)
}

model SocialMediaLink {
  id       Int                 @id @default(autoincrement())
  platform String
  url      String
  cardId   String?
  iconUrl  String?
  card     Card?               @relation(fields: [cardId], references: [id], onDelete: Cascade)
}
model companySocialMediaLink {
  id       Int                 @id @default(autoincrement())
  platform String
  url      String
  cardId   String?
  iconUrl  String?
  card     Card?               @relation(fields: [cardId], references: [id], onDelete: Cascade)
}


model OTP {
  id        Int      @id @default(autoincrement())
  email     String
  otp       String
  createdAt DateTime @default(now())
  expiresAt DateTime @default(now()) @updatedAt

  @@index([email])
}

model Company {
  id         Int      @id @default(autoincrement())
  name       String
  logoUrl    String?
  websiteUrl String?
  createdAt  DateTime @default(now())
}

enum SocialMediaPlatform {
  LINKEDIN
  TWITTER
  FACEBOOK
  INSTAGRAM
  YOUTUBE
  OTHER
}

enum Role {
  User
  Admin
}
